#!/bin/bash
set -eu

image=81078
flavor=101
key_name=ansible
prefix="tmp"
login_user=ubuntu
vms="$prefix-controller $prefix-compute0 $prefix-compute1 $prefix-network"

if [ -z $OS_PASSWORD ]; then
  echo "ERROR: no openstack creds in your shell environment."
  exit 1
fi

echo "destroying: $vms"
for vm in $vms; do
  nova list | grep $vm && nova delete $vm
done

echo "waiting for vms to go away"
for vm in $vms; do
  while nova list | grep $vm; do sleep 1; echo -n '.'; done
done

echo "booting vms"
for vm in $vms; do
  nova boot --image $image --flavor $flavor --key_name $key_name $vm
done

get_ip() {
  nova list | grep "$1" | awk -F\| '{print $5}' | awk -F, '{print $2}' | awk '{print $1}'
}

echo "waiting for vms to come up"
for vm in $vms; do
  while ! nova list | grep $vm | grep ACTIVE; do sleep 1; echo -n '.'; done
  ip=$(get_ip $vm)
  echo "$vm $ip: waiting for sshd"
  until echo '' | nc $ip 22; do echo -n '.'; sleep 1; done

  # hostkeys are currently not generated until a few seconds after sshd comes up.
  ssh_args="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
  until ssh $ssh_args $login_user@$ip uptime 2>&1 > /dev/null; do
    echo -n '.'
    sleep 1
  done

  # copy default pubkey to root account
  ssh $ssh_args $login_user@$ip sudo mkdir -p /root/.ssh
  ssh $ssh_args $login_user@$ip sudo cp /home/$login_user/.ssh/authorized_keys /root/.ssh/authorized_keys
done

echo "writing ansible inventory file"
cat > envs/test/hosts <<eof
[os-controller]
$(get_ip "$prefix-controller")

[os-compute]
$(get_ip "$prefix-compute0")
$(get_ip "$prefix-compute1")

[os-network]
$(get_ip "$prefix-network")
eof

echo "vms are up: $vms !!"
