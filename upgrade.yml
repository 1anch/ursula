# Play for upgrading from one version of OpenStack to another.
# Heavily flavored for Kilo to Mitaka for now, but useful as a model for
# future upgrades. NOT a rolling upgrade optimized for downtime.
#
# Assumes ml2 networking
---
- name: set the facts
  hosts: all:!vyatta-*
  gather_facts: false
  tags: always
  tasks:
    - name: set the upgrade fact
      set_fact: upgrade=True
      run_once: true

    - name: set the git update fact
      set_fact:
        openstack_source:
          git_update: yes
      run_once: true

- name: upgrade common bits first
  hosts: all:!vyatta-*
  max_fail_percentage: 1
  tags: common
  roles:
    - role: common

- name: upgrade glance
  hosts: controller
  max_fail_percentage: 1
  tags: glance

  pre_tasks:
    - name: dump glance db
      mysql_db:
        name: glance
        state: dump
        target: /backup/glance-preupgrade.sql
      run_once: True
      tags: dbdump

  roles:
    - role: glance
      force_sync: true
      restart: False
      database_create:
        changed: false

# Cinder block
- name: stage cinder data software
  hosts: cinder_volume
  max_fail_percentage: 1
  gather_facts: force
  tags:
    - cinder
    - cinder-volume

  roles:
    - role: cinder-data
      restart: False

    - role: stop-services
      services:
        - cinder-volume

- name: stage cinder control software and stop services
  hosts: controller
  max_fail_percentage: 1
  tags:
    - cinder
    - cinder-control

  pre_tasks:
    - name: dump cinder db
      mysql_db:
        name: cinder
        state: dump
        target: /backup/cinder-preupgrade.sql
      run_once: True
      tags: dbdump

  roles:
    - role: cinder-control
      force_sync: true
      restart: False
      database_create:
        changed: false

- name: start cinder data services
  hosts: cinder_volume
  max_fail_percentage: 1
  tags:
    - cinder
    - cinder-volume

  tasks:
    - name: start cinder data services
      service: name=cinder-volume state=started

- name: upgrade heat
  hosts: controller
  max_fail_percentage: 1
  gather_facts: force
  tags: heat

  roles:
    - role: heat
      force_sync: true
      restart: False
      database_create:
        changed: false
      when: heat.enabled|bool

- name: upgrade keystone
  hosts: controller
  max_fail_percentage: 1
  gather_facts: force
  tags: keystone

  pre_tasks:
    - name: dump keystone db
      mysql_db:
        name: keystone
        state: dump
        target: /backup/keystone-preupgrade.sql
      run_once: True
      tags: dbdump

  roles:
    - role: keystone
      force_sync: true
      restart: False
      database_create:
        changed: False

# Nova block
- name: stage nova compute
  hosts: compute
  max_fail_percentage: 1
  tags:
    - nova
    - nova-data

  roles:
    - role: nova-data
      restart: False
      when: ironic.enabled == False

    - role: stop-services
      services:
        - nova-compute
      when: ironic.enabled == False

- name: stage nova control and stop services
  hosts: controller
  max_fail_percentage: 1
  tags:
    - nova
    - nova-control

  pre_tasks:
    - name: dump nova db
      mysql_db:
        name: nova
        state: dump
        target: /backup/nova-preupgrade.sql
      run_once: True
      tags: dbdump

  roles:
    - role: nova-control
      force_sync: true
      restart: False
      database_create:
        changed: false

- name: start nova compute
  hosts: compute
  max_fail_percentage: 1
  tags:
    - nova
    - nova-data

  tasks:
    - name: start nova compute
      service: name=nova-compute state=started
      when: ironic.enabled == False

# Neutron block
- name: stage neutron core data
  hosts: compute:network
  max_fail_percentage: 1
  gather_facts: force
  tags:
    - neutron
    - neutron-data

  roles:
    - role: neutron-data
      restart: False

- name: stage neutron network
  hosts: network
  max_fail_percentage: 1
  tags:
    - neutron
    - neutron-network

  roles:
    - role: neutron-data-network
      restart: False

- name: upgrade neutron control plane
  hosts: controller
  max_fail_percentage: 1
  tags:
    - neutron
    - neutron-control

  pre_tasks:
    - name: dump neutron db
      mysql_db:
        name: neutron
        state: dump
        target: /backup/neutron-preupgrade.sql
      run_once: True
      tags: dbdump

  roles:
    - role: neutron-control
      force_sync: true
      restart: False
      database_create:
        changed: false

- name: restart neutron data service
  hosts: compute:network
  max_fail_percentage: 1
  tags:
    - neutron
    - neutron-data

  tasks:
    - name: restart neutron data service
      service: name=neutron-linuxbridge-agent state=restarted

- name: restart neutron data network services
  hosts: network
  max_fail_percentage: 1
  tags:
    - neutron
    - neutron-network

  tasks:
    - name: restart neutron data network agent services
      service: name={{ item }} state=restarted
      with_items:
        - neutron-l3-agent
        - neutron-dhcp-agent
        - neutron-metadata-agent

- name: upgrade swift
  hosts: swiftnode
  any_errors_fatal: true
  gather_facts: force
  tags: swift

  roles:
    - role: haproxy
      haproxy_type: swift
      tags: ['openstack', 'swift', 'control']

    - role: swift-object
      tags: ['openstack', 'swift', 'data']

    - role: swift-account
      tags: ['openstack', 'swift', 'data']

    - role: swift-container
      tags: ['openstack', 'swift', 'data']

    - role: swift-proxy
      tags: ['openstack', 'swift', 'control']

- name: upgrade horizon
  hosts: controller
  max_fail_percentage: 1
  gather_facts: force
  tags: horizon

  roles:
    - role: horizon

- include: site.yml
