---
- name: check if my.cnf exists
  shell: test -e /etc/my.cnf && echo "exists" || echo "nope"
  register: my_cnf_exists
  changed_when: False

- name: install percona xtradb packages
  register: pkg_installed
  apt: pkg={{ item }} state=installed
  with_items:
  - percona-xtradb-cluster-client-{{ xtradb.client_version }}
  - percona-xtradb-cluster-server-{{ xtradb.server_version }}
  - percona-xtrabackup

# Ubuntu auto starts mysql after installtion. We need to stop mysql
# if this is the first time xtradb packages are being installed
# in order to bootstrap properly
- name: stop mysql if packages were just installed
  service: name=mysql state=stopped
  when: pkg_installed.changed

- name: add my.cnf if non-existent
  template: src=mysql/my.cnf dest=/etc/my.cnf mode=0644
  when: my_cnf_exists.stdout.find("exists") == -1

- name: populate gcomm:// with node IPs in my.cnf
  lineinfile: dest=/etc/my.cnf regexp=^wsrep_cluster_address line=wsrep_cluster_address=gcomm://{% for host in groups['db'] %}{% if not loop.last %}{{ hostvars[host]['ansible_eth0']['ipv4']['address'] }},{% else %}{{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}{% endif %}{% endfor %}

- name: set bind-address to listen on all interfaces 
  lineinfile: dest=/etc/my.cnf regexp=^bind-address line=bind-address=0.0.0.0

- name: set cluster's node ip address
  lineinfile: dest=/etc/my.cnf regexp=^wsrep_node_address line=wsrep_node_address={{ ansible_eth0['ipv4']['address'] }}
