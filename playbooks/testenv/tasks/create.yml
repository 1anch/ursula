---
- name: Provision test environment
  hosts: all
  gather_facts: no
  tasks:
  - name: Gather local facts
    local_action: setup
    run_once: true

  - name: Generate nova key-pair
    local_action: nova_keypair name={{ ansible_user_id }}-key
                               auth_url={{ lookup('env', 'OS_AUTH_URL') }}
                               login_tenant_name={{ lookup('env', 'OS_TENANT_NAME') }}
                               login_username={{ lookup('env', 'OS_USERNAME') }}
                               login_password={{ lookup('env', 'OS_PASSWORD') }}
                               public_key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    run_once: true

  - name: generate test security group
    local_action:
      module: nova_group
      name: "ursula-sec"
      description: "ursula-ci-secgroup"
      rules:
      - ip_protocol: "tcp"
        cidr: 0.0.0.0/0
        from_port: 1
        to_port: 65535
        state: "present"
      - ip_protocol: "udp"
        cidr: 0.0.0.0/0
        from_port: 1
        to_port: 65535
        state: "present"
    run_once: true

  - name: Determine Neutron internal interface ID
    local_action: shell neutron net-show internal | awk '/ id / {print $4}'
    changed_when: False
    register: internal_net
    run_once: true

  - name: provision test instances
    local_action:
      module: nova_compute
      name: "{{ inventory_hostname }}"
      auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
      login_tenant_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
      login_username: "{{ lookup('env', 'OS_USERNAME') }}"
      login_password: "{{ lookup('env', 'OS_PASSWORD') }}"
      flavor_id: 3
      image_name: ubuntu-14.04
      security_groups: "ursula-sec"
      key_name: "{{ ansible_user_id }}-key"
      nics:
      - net-id: "{{ internal_net.stdout }}"
    register: nova_instance

  - name: associate a floating IP with first instance
    local_action: nova_fip server={{ inventory_hostname }}
                           auth_url={{ lookup('env', 'OS_AUTH_URL') }}
                           login_tenant_name={{ lookup('env', 'OS_TENANT_NAME') }}
                           login_username={{ lookup('env', 'OS_USERNAME') }}
                           login_password={{ lookup('env', 'OS_PASSWORD') }}
    register: floating_ip
    run_once: true

  - name: write out ssh_config
    local_action: template src=../templates/ssh_config
                           dest="{{ lookup('env', 'ROOT') }}/envs/test/ssh_config"
    run_once: true

  - name: wait for first instance
    local_action: wait_for port=22 timeout=300 host={{ floating_ip.floating_ip }}
    run_once: true

  - name: wait for all instances
    wait_for: port=22 timeout=300 host={{ nova_instance.private_ip }}
    delegate_to: "{{ floating_ip.floating_ip }}"
    remote_user: ubuntu
