---
- name: integration testing
  hosts: controller[0]
  tasks:
  - name: generate ssh key for root
    user: name=root generate_ssh_key=yes

  - name: generate nova key-pair
    shell: . /root/stackrc; nova keypair-add turtle-key --pub-key
           /root/.ssh/id_rsa.pub

  - name: generate test security group
    shell: . /root/stackrc; neutron security-group-create turtle-sec &&
           neutron security-group-rule-create turtle-sec --remote-ip-prefix
           0.0.0.0/0

  - name: nova can boot an instance
    shell: . /root/stackrc; INTERNAL_NET=$( nova net-list | awk
           '/ internal / {print $2}' ); nova boot --flavor m1.tiny --image
           cirros --nic net-id=${INTERNAL_NET} --key-name
           turtle-key --security-groups turtle-sec --poll turtle-stack

  - name: neutron can associate floating IP with test instance
    neutron_floating_ip: auth_url={{ endpoints.auth_uri }}
                         login_tenant_name=admin
                         login_username=provider_admin
                         login_password={{ secrets.provider_admin_password }}
                         network_name=external
                         instance_name=turtle-stack
                         fixed_ip={{ turtle_stack.private_ips|ipv4|first }}
    register: floating_ip

  - name: nova can create a volume via cinder
    shell: . /root/stackrc; nova volume-create --display-name=turtle-vol 2

  - name: discover volume id
    shell: . /root/stackrc; nova volume-list |awk '/turtle-vol/ {print $2}'
    register: turtle_vol

  - name: nova can attach cinder volume
    shell: . /root/stackrc; nova volume-attach
           turtle-stack {{ turtle_vol.stdout }} auto

  - name: can ping instance
    shell: ping -c 5 {{ floating_ip.public_ip }}

# (due to 1450 MTU on VXLAN this doesn't work with recent version of SSH)
  - name: test instance can ping Google
    shell: . /root/stackrc; ssh -o
           UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
           cirros@{{ floating_ip.public_ip }} ping -c 5 www.google.com
    when: ansible_distribution_version == "12.04"
