---
- hosts: os-controller
  connection: fireball

  vars_files:
    - vars/common.yml

  tasks:

    - name: keystone user
      user: name=keystone shell=/bin/false

    - name: get keystone source repo
      git: |
        repo=https://github.com/openstack/keystone.git dest=/opt/stack/keystone version="${keystone.rev}"
      notify:
        - pip install keystone

    - name: /etc/keystone
      file: dest=/etc/keystone state=directory

    - name: keystone.conf
      template: src=templates/etc/keystone/keystone.conf dest=/etc/keystone/keystone.conf
      notify:
        - restart keystone

    - name: policy.json
      template: src=templates/etc/keystone/policy.json dest=/etc/keystone/policy.json
      notify:
        - restart keystone

    - name: keystone start script
      template: src=templates/etc/init/keystone.conf dest=/etc/init/keystone.conf
      notify:
        - restart keystone

    - name: keystone pki
      command: keystone-manage pki_setup

    - name: keystone is running
      service: name=keystone state=started


    # TODO: generate only once and distribute.
    - name: keystone pki
      command: keystone-manage pki_setup
    - file: |
        recurse=True
        dest=/etc/keystone/ssl
        state=directory
        owner=keystone
        group=keystone
      notify:
        - restart keystone


    # keystone tenants / users / roles

    - name: keystone tenants
      keystone_user: >
        tenant={{ item }}
        tenant_description="{{ item }} tenant"
        token={{ secrets.admin_token }}
      with_items: keystone.tenants


    - name: keystone users
      keystone_user: >
        user={{ item.name }}
        password={{ item.password }}
        tenant={{ item.tenant }}
        token={{ secrets.admin_token }}
      with_items: keystone.users

    - name: keystone roles
      keystone_user: >
        role={{ item.role }}
        user={{ item.user }}
        tenant={{ item.tenant }}
        token={{ secrets.admin_token }}
      with_items: keystone.user_roles

    - name: keystone services
      keystone_service: >
        name={{ item.name }}
        type={{ item.type }}
        description='{{ item.description }}'
        public_url={{ item.public_url }}
        internal_url={{ item.internal_url }}
        admin_url={{ item.admin_url }}
        region=RegionOne
        token={{ secrets.admin_token }}
      with_items: keystone.services


  handlers:
    - name: restart keystone
      action: service name=keystone state=restarted

    - name: pip install keystone
      action: command pip install /opt/stack/keystone
