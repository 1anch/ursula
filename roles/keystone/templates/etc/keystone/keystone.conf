[DEFAULT]
admin_token = {{ secrets.admin_token }}

debug = False
verbose = False

public_endpoint = https://{{ endpoints.keystone }}:5001/
admin_endpoint = https://{{ endpoints.keystone }}:35358/

# Logging #
log_dir = /var/log/keystone

admin_workers = {{ keystone.admin_workers }}
public_workers = {{ keystone.public_workers }}

[sql]
connection=mysql://keystone:{{ secrets.db_password }}@{{ endpoints.db }}/keystone?charset=utf8

[identity]
driver = keystone.identity.backends.sql.Identity

[catalog]
driver = keystone.catalog.backends.sql.Catalog

[token]
driver = keystone.token.persistence.backends.sql.Token
provider = keystone.token.providers.pki.Provider

# Amount of time a token should remain valid (in seconds)
expiration = {{ keystone.token_expiration_in_seconds }}

{% macro memcached_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

[memcache]
servers = {{ memcached_hosts() }}

[policy]
# driver = keystone.policy.backends.sql.Policy

[ec2]
# driver = keystone.contrib.ec2.backends.kvs.Ec2

[ssl]
enable = False
#certfile = /etc/keystone/ssl/certs/keystone.pem
#keyfile = /etc/keystone/ssl/private/keystonekey.pem
#ca_certs = /etc/keystone/ssl/certs/ca.pem
#cert_required = True

[signing]
cert_subject = /C={{ country_code }}/ST=Unset/L=Unset/O=Unset/CN={{ endpoints.main }}

[paste_deploy]
config_file = /etc/keystone/keystone-paste.ini

[revoke]
driver = keystone.contrib.revoke.backends.sql.Revoke
