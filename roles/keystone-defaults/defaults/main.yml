---
keystone:
  token_expiration_in_seconds: 86400
  admin_workers: 5
  public_workers: 5
  source:
    rev: 'stable/mitaka'
    python_dependencies:
      - { name: PyMySQL }
      - { name: uwsgi }
    system_dependencies:
      - openssl
      - libldap2-dev
      - libsasl2-dev
      - libkrb5-dev
  alternatives:
    - keystone-manage
    - keystone-all
    - keystone-wsgi-admin
    - keystone-wsgi-public
  jellyroll: False # custom middleware for password compliance
  roles:
    - project_admin
  logs:
    - paths:
      - /var/log/keystone/keystone-all.log
      fields:
        type: openstack
        tags: keystone,keystone-all
    - paths:
        - /var/log/keystone/keystone-manage.log
      fields:
        type: openstack
        tags: keystone,keystone-manage
  logging:
    debug: False
    verbose: True
  monitoring:
    sensu_checks:
      check_keystone_api:
        criticality: 'critical'
  federation:
    enabled: False
    idp:
      # Enable keystone to be an identity provider
      # for keystone to keystone federation
      k2k:
        enabled: False
        service_providers: []
        saml_signing_cert: ""
        saml_signing_key: ""
    sp:
      # Enable keystone to be a service provider
      # for keystone to keystone federation
      k2k:
        enabled: False
        sp_id: "default-service-provider-id"
        shibboleth_crt: None
        shibboleth_key: None
        support_contact: ""
        idp_id: "default-identity-provider-id"
        idp_metadata_url: "default-keystone-idp-url"
        idp_metadata_min_refresh_delay: 600
        idp_metadata_max_refresh_delay: 3600
        idp_metadata_factor_refresh_delay: 0.75
      oidc:
        enabled: False
        download:
          url: https://github.com/pingidentity/mod_auth_openidc/releases/download/v1.8.3/libapache2-mod-auth-openidc_1.8.3-1_amd64.deb
        module_name: libapache2-mod-auth-openidc_1.8.3-1_amd64.deb
        scope: 'openid'
        issuer: 'issuer'
        remote_user_claim: 'Email'
        user_info_endpoint: 'https://op.example.org/oauth/userinfo'
        authorization_endpoint: 'https://op.example.org/oauth/authorize'
        token_endpoint: 'https://op.example.org/oauth/token'
        introspection_endpoint: 'https://op.example.org/oauth/introspection'
        client_id: 'clientid'
        client_secret: 'client_secret'
        crypto_passphrase: 'openstack'
        redirect_uri: 'https://openstack.example.org:5000/v3/auth/OS-FEDERATION/websso/oidc/redirect'
        ssl_validate_server: True
    identity_providers:
      - { name: someprovider, remote_ids: oidc }
    groups:
      - { name: someprovider-admins }
    role:
      - { group: someprovider-admins, role: some-role, project: some-project }
    mappings:
      - name: someprovider-admins
        rules:
          - local:
            - group:
                name: someprovider-admins
                domain:
                  name: Default
            remote:
            - type: HTTP_OIDC_CLAIM_USERNAME
              any_one_of: ['user@someprovider.com']
    protocols:
      - { name: oidc, mapping: someprovider-admins, identity_provider: someprovider }

  bootstrap:
    user: admin
    password: "{{ secrets.admin_password }}"
    project: admin
    role: admin
