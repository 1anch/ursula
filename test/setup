#!/usr/bin/env bash

source $(dirname $0)/common

$root/test/check-deps

echo "writing initial inventory file"
mkdir -p $root/envs/test
cat > $root/envs/test/hosts <<eof
[local]
127.0.0.1
eof

echo "destroying: $vms"
$root/test/cleanup

echo "setting up keypair"
$(ansible_command \
  "envs/test/hosts" \
  "root" \
  $root/playbooks/tests/tasks/instances/keypair.yml)

echo "setting up security group"
$(ansible_command \
  "envs/test/hosts" \
  "root" \
  $root/playbooks/tests/tasks/instances/security_groups.yml)

echo "booting vms"
$(ansible_command \
  "envs/test/hosts" \
  "root" \
  $root/playbooks/tests/tasks/instances/create.yml)

echo "waiting for vms to come up"
for vm in $vms; do
  while ! nova list | grep $vm | grep ACTIVE >/dev/null; do sleep 1; echo -n '.'; done; echo
  ip=$(public_ip $vm)
  echo "$vm $ip: waiting for sshd"
  until echo '' | nc $ip 22 2>&1 >/dev/null; do echo -n '.'; sleep 1; done

  # hostkeys are currently not generated until a few seconds after sshd comes up.
  until ssh $ssh_args $login_user@$ip uptime 2>&1 >/dev/null; do
    echo -n '.'
    sleep 1
  done

  ssh $ssh_args $login_user@$ip "echo '127.0.1.1 $vm' | sudo tee -a /etc/hosts"

  ssh $ssh_args $login_user@$ip sudo mkdir -p /root/.ssh 2>&1 >/dev/null
  ssh $ssh_args $login_user@$ip sudo cp /home/$login_user/.ssh/authorized_keys /root/.ssh/. 2>&1 >/dev/null
done
controller_ip=$(public_ip test-controller-0)

echo "building config"
rm -rf $root/envs/test/group_vars/
rm -f $root/envs/test/hosts
mkdir -p $root/envs/test/
cp -r $root/envs/example/group_vars $root/envs/test
cp $root/envs/example/hosts $root/envs/test
sed -i -e "s/^controller_primary: \&controller.*/controller_primary: \&controller $controller_ip/" envs/test/group_vars/all.yml

echo "generating ssl cert for $controller_ip"
cert_dir=$(mktemp -d 2> /dev/null || mktemp -d -t 'setup')
pushd $cert_dir
$root/test/gen-cert $controller_ip
cat >> $root/envs/test/group_vars/all.yml <<eof
ssl:
  crt: |
eof
cat $cert_dir/$controller_ip.crt | sed 's/^/    /' >> $root/envs/test/group_vars/all.yml
cat >> $root/envs/test/group_vars/all.yml <<eof
  key: |
eof
cat $cert_dir/$controller_ip.key | sed 's/^/    /' >> $root/envs/test/group_vars/all.yml
popd
rm -rf $cert_dir

echo "writing inventory file"
cat > $root/envs/test/hosts <<eof
[db]
$(public_ip "test-controller-0")
$(public_ip "test-controller-1")

[db_arbiter]
$(public_ip "test-compute-0")

[controller]
$(public_ip "test-controller-0")
$(public_ip "test-controller-1")

[compute]
$(public_ip "test-compute-0")

[network]
$(public_ip "test-controller-0")
eof

echo "vms are up: $vms !!"
